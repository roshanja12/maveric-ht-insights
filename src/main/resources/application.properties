quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,PUT,POST,DELETE
quarkus.http.cors.access-control-allow-credentials=true

# =========== App config ==========

%dev.quarkus.http.port=8082
jackson.parser.allow-numeric-leading-zeros=true
quarkus.http.test-port=8083
quarkus.http.test-ssl-port=8446

# ========= KafKa config ===========

kafka.auto.offset.reset=earliest
mp.messaging.incoming.insights-events.topic=insights-events
mp.messaging.incoming.insights-events.value.deserializer=org.acme.utils.KafkaRequestDeserializer

# Local
# kafka.bootstrap.servers=localhost:9092
# Dev
kafka.bootstrap.servers=52.90.39.199:9092


# ======= DB config======

# Dev Config
#quarkus.datasource.jdbc.url=jdbc:postgresql://${dbhost:ls-c0b1dbfd69f0d41f4bf1a11e85b8f19ea2ee6791.cfgtnwcp9nmb.us-east-1.rds.amazonaws.com}:${dbport:5432}/${dbname:dbmavericht}
#quarkus.datasource.jdbc.driver=${dbdriver:org.postgresql.Driver}
#quarkus.datasource.username=${dbusername:postgres}
#quarkus.datasource.password=${dbpassword:admin#123}
#quarkus.hibernate-orm.database.generation = create

# Sandbox Config
quarkus.datasource.jdbc.url=jdbc:postgresql://${dbhost:sso-keycloak-postgresql}:${dbport:5432}/${dbname:root}
quarkus.datasource.username=${dbusername:admin}
quarkus.datasource.password=${dbpassword:admin}
quarkus.datasource.jdbc.driver=${dbdriver:org.postgresql.Driver}
quarkus.hibernate-orm.database.generation = update

# Local Config

#quarkus.datasource.db-kind=postgresql
#quarkus.datasource.username=postgres
#quarkus.datasource.password=root
#quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/insights_details
#quarkus.hibernate-orm.database.generation = update



